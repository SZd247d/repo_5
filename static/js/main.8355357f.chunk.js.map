{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","img","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","type","placeholder","aria-label","onChange","target","value","App","image","setImage","loading","setLoading","term","setTerm","useEffect","a","fetch","process","res","json","data","hits","console","log","fetchImages","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAwCeA,G,MAtCG,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACbC,EAAOD,EAAIC,KAAKC,MAAM,KAE5B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAKJ,EAAIK,aAAcC,IAAI,GAAGH,UAAU,WAC7C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,uCAAf,sBACYH,EAAIO,QAEhB,+BACE,+BACE,6CACCP,EAAIQ,SAEP,+BACE,iDACCR,EAAIS,aAEP,+BACE,6CACCT,EAAIU,eAIX,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,uBAEEV,UAAU,2FAFZ,cAGIS,IAFGC,aCAFC,EA5BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAQtC,OACE,sBAAMC,SANS,SAAAC,GACfA,EAAEC,iBACFN,EAAWE,IAIed,UAAU,gCAApC,SACE,sBAAKA,UAAU,kDAAf,UACE,uBACEA,UAAU,kHACVmB,KAAK,OACLC,YAAY,uBACZC,aAAW,YACXC,SAAU,SAAAL,GAAC,OAAIF,EAAQE,EAAEM,OAAOC,UAElC,wBACExB,UAAU,kIACVmB,KAAK,SAFP,0BC6BOM,MA5Cf,WAAgB,IAAD,EACaZ,mBAAS,IADtB,mBACNa,EADM,KACCC,EADD,OAEiBd,oBAAS,GAF1B,mBAENe,EAFM,KAEGC,EAFH,OAGWhB,mBAAS,IAHpB,mBAGNiB,EAHM,KAGAC,EAHA,KAqBb,OAhBAC,qBAAU,YACS,uCAAG,8BAAAC,EAAA,+EAEEC,MAAM,gCAAD,OACWC,qCADX,cACsDL,EADtD,qDAFP,cAEVM,EAFU,gBAKGA,EAAIC,OALP,OAKVC,EALU,OAMhBX,EAASW,EAAKC,MACdV,GAAW,GAPK,kDAShBW,QAAQC,IAAR,MATgB,0DAAH,qDAYjBC,KACC,CAACZ,IAGF,sBAAK9B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAAAE,GAAI,OAAIiB,EAAQjB,OACvCc,GAA4B,IAAjBF,EAAMiB,QACjB,oBAAI3C,UAAU,mDAAd,4BAID4B,EACC,oBAAI5B,UAAU,mDAAd,wBAIA,qBAAKA,UAAU,yBAAf,SACG0B,EAAMlB,KAAI,SAAAX,GAAG,OACZ,cAAC,EAAD,CAAwBA,IAAKA,GAAbA,EAAI+C,aCrChCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8355357f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageCard = ({ img }) => {\r\n  const tags = img.tags.split(',');\r\n\r\n  return (\r\n    <div className='max-w-sm rounded overflow-hidden shadow-lg max-h-32'>\r\n      <img src={img.webformatURL} alt='' className='w-full' />\r\n      <div className='px-6 py-4'>\r\n        <div className='font-bold text-teal-500 tetx-xl mb-2'>\r\n          Photo By {img.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {img.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {img.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {img.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className='px-6 py-4'>\r\n        {tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className='inline-block bg-gray-300 text-gray-600 text-sm px-3 py-1 rounded-full mr-2 font-semibold'>\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({ searchText }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className='w-full max-w-sm my-10 mx-auto'>\r\n      <div className='flex items-center border-b border-teal-500 py-2'>\r\n        <input\r\n          className='appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none'\r\n          type='text'\r\n          placeholder='Search Image Term...'\r\n          aria-label='Full name'\r\n          onChange={e => setText(e.target.value)}\r\n        />\r\n        <button\r\n          className='flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded'\r\n          type='submit'>\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import React, { useEffect, useState } from 'react';\nimport './assets/main.css';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [image, setImage] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const res = await fetch(\n          `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&category=computer&per_page=200`\n        );\n        const data = await res.json();\n        setImage(data.hits);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchImages();\n  }, [term]);\n\n  return (\n    <div className='container mx-auto'>\n      <ImageSearch searchText={text => setTerm(text)} />\n      {!loading && image.length === 0 && (\n        <h1 className='text-5xl text-center text-gray-700 mx-auto mt-32'>\n          No Image Found\n        </h1>\n      )}\n      {loading ? (\n        <h1 className='text-6xl text-center text-gray-700 mx-auto mt-32'>\n          Loading...\n        </h1>\n      ) : (\n        <div className='grid grid-cols-3 gap-4'>\n          {image.map(img => (\n            <ImageCard key={img.id} img={img} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}